@page "/generos/editar/{GeneroId:int}"
@inject IRepositorio repositorio
@inject SweetAlertService Swal
@inject NavigationManager navigation
@attribute [Authorize(Roles = "admin")]
<h3>Editar</h3>
@if (Genero is null)
{
    <div class="d-flex justify-content-center">
        <div class="spinner-border" role="status">
        </div>
    </div>
}
else
{
    <GeneroForm Genero="Genero" Save="Save"></GeneroForm>
}

@code {
    [Parameter] public int GeneroId { get; set; }
    private Genero Genero;

    protected override async Task OnInitializedAsync()
    {
        var responseHttp = await repositorio.Get<Genero>($"api/generos/{GeneroId}");
        if (responseHttp.Error)
        {
            if(responseHttp.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                navigation.NavigateTo("generos");
            }
            else
            {
                var errorMessage = await responseHttp.ObtenerMensageError();
                await Swal.FireAsync("Error", errorMessage, SweetAlertIcon.Error);
            }
        }
        else
        {
            Genero = responseHttp.Response;
        }
    }

    private async void Save()
    {
        var responseHttp = await repositorio.Put("api/generos", Genero);

        if (responseHttp.Error)
        {
            var errorMessage = await responseHttp.ObtenerMensageError();
            await Swal.FireAsync("Error", errorMessage, SweetAlertIcon.Error);
        }
        else
        {
            navigation.NavigateTo("generos");
        }
    }
}
