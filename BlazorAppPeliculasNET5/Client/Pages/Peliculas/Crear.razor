@page "/peliculas/crear"
@inject NavigationManager navigationManager
@inject IRepositorio repositorio
@inject SweetAlertService Swal
<h3>Crear Pelicula</h3>

@if (!ShowForm)
{
    <p>Cargando...</p>
}
else
{
    <PeliculaForm Pelicula="Pelicula" 
        OnValidSubmit="Save" 
        GenerosNoSeleccionados="GenerosNoSeleccionados"></PeliculaForm>
}

@code {
    private Pelicula Pelicula = new Pelicula();
    private List<Genero> GenerosNoSeleccionados = new List<Genero>();
    private bool ShowForm = false;

    protected async override Task OnInitializedAsync()
    {
        var responseHttp = await repositorio.Get<List<Genero>>("api/generos");
        GenerosNoSeleccionados = responseHttp.Response;
        ShowForm = true;
    }

    async void Save()
    {
        var httpRespone = await repositorio.Post<Pelicula,Pelicula>("api/peliculas", Pelicula);
        if (httpRespone.Error)
        {
            var mensajeError = await httpRespone.ObtenerMensageError();
            await Swal.FireAsync("Error", mensajeError, SweetAlertIcon.Error);
        }
        else
        {
            var pelicula = httpRespone.Response;
            navigationManager.NavigateTo($"/peliculas/{pelicula.Id}/{Pelicula.Titulo.Replace(" ","-")}");
        }
    }
}
